<?xml version="1.0" encoding="UTF-8"?>
<!-- sql must return one row and one column with name retvalue -->
<sql_list>
<sql item_key="connect">
	select 1
</sql>
<sql item_key="uptime">
	select date_part('epoch', now() - pg_postmaster_start_time())::int
</sql>
<sql item_key="cache.hit">
	select round(sum(blks_hit)*100/sum(blks_hit+blks_read), 2) from pg_stat_database
</sql>
<sql item_key="connections">
 SELECT
 row_to_json(j)
 FROM
  (select
   sum(CASE WHEN state = 'active' THEN 1 ELSE 0 END) AS active,
   sum(CASE WHEN state = 'idle' THEN 1 ELSE 0 END) AS idle,
   sum(CASE WHEN state = 'idle in transaction' THEN 1 ELSE 0 END) AS idle_in_transaction,
   count(*) AS total,
   count(*)*100/(select current_setting('max_connections')::int) AS total_pct,
   sum(CASE WHEN wait_event is not null THEN 1 ELSE 0 END) AS waiting from pg_stat_activity) AS j
</sql>
<sql item_key="prepared">
select count(*) from pg_prepared_xacts
</sql>
<sql item_key="dbsize">
 select pg_database_size(:1)
</sql>
<sql item_key="dbstatsum">
	SELECT row_to_json(j)
	FROM (
	 SELECT
	  sum(numbackends) AS numbackends,
	  sum(xact_commit) AS xact_commit,
	  sum(xact_rollback) AS xact_rollback,
	  sum(blks_read) AS blks_read,
	  sum(blks_hit) AS blks_hit,
	  sum(tup_returned) AS tup_returned,
	  sum(tup_fetched) AS tup_fetched,
	  sum(tup_inserted) AS tup_inserted,
	  sum(tup_updated) AS tup_updated,
	  sum(tup_deleted) AS tup_deleted,
	  sum(conflicts) AS conflicts,
	  sum(temp_files) AS temp_files,
	  sum(temp_bytes) AS temp_bytes,
	  sum(deadlocks) AS deadlocks FROM pg_stat_database) AS j
</sql>
<sql item_key="bgwriter">
SELECT row_to_json(j)
FROM
(SELECT
 checkpoints_timed,
 checkpoints_req,
 checkpoint_write_time,
 checkpoint_sync_time,
 current_setting('block_size')::int*buffers_checkpoint AS buffers_checkpoint,
 current_setting('block_size')::int*buffers_clean AS buffers_clean,
 maxwritten_clean, current_setting('block_size')::int*buffers_backend AS buffers_backend,
 buffers_backend_fsync,
 current_setting('block_size')::int*buffers_alloc AS buffers_alloc
 FROM pg_stat_bgwriter) AS j
</sql>
<sql item_key="">

</sql>

</sql_list>
